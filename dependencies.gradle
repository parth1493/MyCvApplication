ext{
    androidBuildToolsVersion = "29.0.2"
    androidMinSdkVersion = 26
    androidTargetSdkVersion = 29
    androidCompileSdkVersion = 29
    kotlinVersion = '1.3.50'

    //Libraries
    rxKotlinVersion = '2.4.0'
    javaxAnnotationVersion ='1.0'
    javaxInjectVersion = '1'
    gsonVersion = '2.8.6'
    rxKotlinVersion = '2.4.0'
    androidAnnotationsVersion ='1.1.0'
    okHttpVersion = '4.2.2'
    okHttpVersionLogger = '4.2.1'
    retrofitVersion = '2.6.2'
    roomVersion = '2.2.1'
    daggerVersion = '2.25.2'
    rxAndroidVersion = '2.1.1'
    lifecycleVersion = '2.1.0'

    //Testing
    jUnitVersion = '4.12'
    assertJVersion = '3.14.0'
    mockitoVersion = '2.2.0'
    robolectricVersion = '4.3.1'
    mokitoInlineVersion = '3.1.0'
    mockitoKotlinVersion = '1.5.0'
    junitTestVersion = '1.1.0'
    archTestVersion = '2.1.0'

    domainDependencies = [
        javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
        javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
        rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
        kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    ]


    domainTestDependencies = [
            jUnit: "junit:junit:${jUnitVersion}",
            mockito: "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}"
    ]

    dataDependencies = [
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}"
    ]

    dataTestDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            mockito: "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            mockitoInline: "org.mockito:mockito-inline:${mokitoInlineVersion}"
    ]

    remoteDependencies = [
            gson: "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "androidx.annotation:annotation:${androidAnnotationsVersion}",
            okHttp: "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger: "com.squareup.okhttp3:logging-interceptor:${okHttpVersionLogger}",
            retrofit: "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter: "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]


    cacheDependencies = [
            daggerCompiler: "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger: "com.google.dagger:dagger:${daggerVersion}",
            gson: "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime: "androidx.room:room-runtime:${roomVersion}",
            roomCompiler: "androidx.room:room-compiler:${roomVersion}",
            roomRxJava: "androidx.room:room-rxjava2:${roomVersion}"
    ]

    cacheTestDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            roomTesting: "androidx.room:room-testing:${roomVersion}",
            archTesting: "androidx.arch.core:core-testing:${archTestVersion}",
            junitTest: "androidx.test.ext:junit:${junitTestVersion}"
    ]

    presentationDependencies = [
            daggerCompiler: "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger: "com.google.dagger:dagger:${daggerVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            lifecycleRuntime: "androidx.lifecycle:lifecycle-runtime:${lifecycleVersion}",
            lifecycleExtensions: "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
            lifecycleCompiler: "androidx.lifecycle:lifecycle-compiler:${lifecycleVersion}"
    ]

    presentationTestDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            lifecycleTesting: "androidx.arch.core:core-testing:${lifecycleVersion}"
    ]
}